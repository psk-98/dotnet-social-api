// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_social_api.Data;

#nullable disable

namespace dotnet_social_api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240917162437_AddingProfilePicture")]
    partial class AddingProfilePicture
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "89d5b625-1d25-4f2c-8746-1bc2e6a5ac3d",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "4853653d-02a7-4b49-ac88-ca57983158fe",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("dotnet_social_api.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Great post! Really enjoyed the insights.",
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 1,
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Thanks for sharing this information.",
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 2,
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 3,
                            Body = "This was very helpful. Looking forward to more updates!",
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 3,
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 4,
                            Body = "I disagree with some of the points mentioned.",
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 4,
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Can you provide more details on this topic?",
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 5,
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 6,
                            Body = "Amazing content! Keep up the great work.",
                            CreatedOn = new DateTime(2024, 9, 11, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 6,
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 7,
                            Body = "Very informative, but could use some examples.",
                            CreatedOn = new DateTime(2024, 9, 10, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 7,
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 8,
                            Body = "Nice article. I learned something new today!",
                            CreatedOn = new DateTime(2024, 9, 9, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 8,
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 9,
                            Body = "Good read, but could be more concise.",
                            CreatedOn = new DateTime(2024, 9, 8, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 9,
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 10,
                            Body = "Interesting perspective, thanks for sharing!",
                            CreatedOn = new DateTime(2024, 9, 7, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 10,
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        });
                });

            modelBuilder.Entity("dotnet_social_api.Models.Follow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FolloweeUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FolloweeUserProfileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FollowerUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FollowerUserProfileId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FolloweeUserProfileId");

                    b.HasIndex("FollowerUserProfileId");

                    b.ToTable("Follows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FolloweeUserId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            FollowerUserId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 2,
                            FolloweeUserId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb",
                            FollowerUserId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 3,
                            FolloweeUserId = "0f6a348a-760e-4f67-8a72-fb1397b43f23",
                            FollowerUserId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 4,
                            FolloweeUserId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b",
                            FollowerUserId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 5,
                            FolloweeUserId = "ed677356-50e3-4640-8077-99db7f391a5b",
                            FollowerUserId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 6,
                            FolloweeUserId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            FollowerUserId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 7,
                            FolloweeUserId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb",
                            FollowerUserId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 8,
                            FolloweeUserId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b",
                            FollowerUserId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 9,
                            FolloweeUserId = "ed677356-50e3-4640-8077-99db7f391a5b",
                            FollowerUserId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 10,
                            FolloweeUserId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            FollowerUserId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        });
                });

            modelBuilder.Entity("dotnet_social_api.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CommentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 1,
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 2,
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 3,
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 4,
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            PostId = 5,
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 6,
                            CommentId = 1,
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 7,
                            CommentId = 2,
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 8,
                            CommentId = 3,
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 9,
                            CommentId = 4,
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 10,
                            CommentId = 5,
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        });
                });

            modelBuilder.Entity("dotnet_social_api.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageThreadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SenderUserProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MessageThreadId");

                    b.HasIndex("SenderUserProfileId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("dotnet_social_api.Models.MessageThread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserOneId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserProfileOneId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserProfileTwoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserTwoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileOneId");

                    b.HasIndex("UserProfileTwoId");

                    b.ToTable("MessageThreads");
                });

            modelBuilder.Entity("dotnet_social_api.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CommentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("FromUserProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToUserProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("FromUserProfileId");

                    b.HasIndex("PostId");

                    b.HasIndex("ToUserProfileId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            IsSeen = false,
                            PostId = 1,
                            ToUserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b",
                            Type = 3
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb",
                            IsSeen = false,
                            PostId = 2,
                            ToUserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            Type = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23",
                            IsSeen = false,
                            PostId = 3,
                            ToUserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb",
                            Type = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b",
                            IsSeen = false,
                            PostId = 4,
                            ToUserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23",
                            Type = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b",
                            IsSeen = false,
                            PostId = 5,
                            ToUserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b",
                            Type = 3
                        },
                        new
                        {
                            Id = 6,
                            CommentId = 1,
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb",
                            IsSeen = false,
                            ToUserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            Type = 3
                        },
                        new
                        {
                            Id = 7,
                            CommentId = 2,
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23",
                            IsSeen = false,
                            ToUserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb",
                            Type = 3
                        },
                        new
                        {
                            Id = 8,
                            CommentId = 3,
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b",
                            IsSeen = false,
                            ToUserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23",
                            Type = 3
                        },
                        new
                        {
                            Id = 9,
                            CommentId = 4,
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b",
                            IsSeen = false,
                            ToUserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b",
                            Type = 3
                        },
                        new
                        {
                            Id = 10,
                            CommentId = 5,
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            FromUserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            IsSeen = false,
                            ToUserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b",
                            Type = 3
                        });
                });

            modelBuilder.Entity("dotnet_social_api.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Welcome to the system! Excited to have you here.",
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 2,
                            Body = "System maintenance scheduled for tonight.",
                            CreatedOn = new DateTime(2024, 9, 17, 10, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 3,
                            Body = "New feature release notes available in the documentation.",
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Reminder: Update your profile settings.",
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Check out the latest system reports.",
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "ed677356-50e3-4640-8077-99db7f391a5b"
                        },
                        new
                        {
                            Id = 6,
                            Body = "Just pushed a new update to the repository.",
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 7,
                            Body = "Working on improving the API performance.",
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 8,
                            Body = "Dev meetup scheduled for next week.",
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 9,
                            Body = "New blog post on best coding practices.",
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 10,
                            Body = "Exploring new tools for developers.",
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6"
                        },
                        new
                        {
                            Id = 11,
                            Body = "Check out the latest design trends.",
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 12,
                            Body = "Redesigned the homepage for a client.",
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 13,
                            Body = "Design tips for creating effective UI.",
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 14,
                            Body = "How to use color theory in design.",
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 15,
                            Body = "Design project management tips.",
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb"
                        },
                        new
                        {
                            Id = 16,
                            Body = "New marketing strategy launched.",
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 17,
                            Body = "Top 5 tips for effective social media marketing.",
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 18,
                            Body = "Exploring new digital marketing tools.",
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 19,
                            Body = "Analyzing the latest marketing trends.",
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 20,
                            Body = "Effective strategies for increasing engagement.",
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "0f6a348a-760e-4f67-8a72-fb1397b43f23"
                        },
                        new
                        {
                            Id = 21,
                            Body = "Support hours extended this week.",
                            CreatedOn = new DateTime(2024, 9, 16, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 22,
                            Body = "New troubleshooting guide available.",
                            CreatedOn = new DateTime(2024, 9, 15, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 23,
                            Body = "How to resolve common support issues.",
                            CreatedOn = new DateTime(2024, 9, 14, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 24,
                            Body = "Tips for better customer support.",
                            CreatedOn = new DateTime(2024, 9, 13, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        },
                        new
                        {
                            Id = 25,
                            Body = "New features in the support portal.",
                            CreatedOn = new DateTime(2024, 9, 12, 16, 24, 36, 818, DateTimeKind.Utc).AddTicks(3767),
                            UserProfileId = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b"
                        });
                });

            modelBuilder.Entity("dotnet_social_api.Models.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ed677356-50e3-4640-8077-99db7f391a5b",
                            AccessFailedCount = 0,
                            Bio = "System Administrator",
                            ConcurrencyStamp = "c84e595e-c5db-4197-899b-a13f773f48b3",
                            DateJoined = new DateTime(2024, 9, 17, 18, 24, 36, 822, DateTimeKind.Local).AddTicks(6875),
                            Email = "admin@localhost",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEAN9gYaG4RHejqXkUifdbB9IeZ/942STxwjR72VEh+hDX6Z+SWNcZj1jsyZpiQcZbw==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "",
                            SecurityStamp = "2e3cd608-3eec-42e1-834d-f3b955a388ea",
                            TwoFactorEnabled = false,
                            UserName = "Admin",
                            Website = "http://localhost"
                        },
                        new
                        {
                            Id = "b31adf09-b1f4-4f2d-bb02-6d1e9f7c65b6",
                            AccessFailedCount = 0,
                            Bio = "Software Developer",
                            ConcurrencyStamp = "1572a197-cf6b-41bf-a345-a826dfcbbc1b",
                            DateJoined = new DateTime(2024, 9, 17, 18, 24, 36, 892, DateTimeKind.Local).AddTicks(7613),
                            Email = "devuser@localhost",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEVUSER",
                            PasswordHash = "AQAAAAIAAYagAAAAEDu2kHmmVUybqC6gyNVBZmN0/p/WlvTEIy57QlX3n9WeGWREJFzLwKZ99oSkMtS1hg==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "",
                            SecurityStamp = "b8ff8f84-960d-427b-9fde-a6f8bc02d75c",
                            TwoFactorEnabled = false,
                            UserName = "DevUser",
                            Website = "http://devsite.local"
                        },
                        new
                        {
                            Id = "4d1cf4a5-4e5d-43d5-bb1d-22a5b0c85dcb",
                            AccessFailedCount = 0,
                            Bio = "Creative Designer",
                            ConcurrencyStamp = "1e1219fd-689f-4693-85a3-571405f6b5cc",
                            DateJoined = new DateTime(2024, 9, 17, 18, 24, 36, 971, DateTimeKind.Local).AddTicks(8021),
                            Email = "designguru@localhost",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DESIGNGURU",
                            PasswordHash = "AQAAAAIAAYagAAAAEB2kIsWg4RwLE0yuNut7Mp/yO4qfschkUqh0tgILXIhyQO8y5mVCfhbdgJtiILU/WQ==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "",
                            SecurityStamp = "dff6e51a-fea3-419d-ae87-8c4df169c791",
                            TwoFactorEnabled = false,
                            UserName = "DesignGuru",
                            Website = "http://design.local"
                        },
                        new
                        {
                            Id = "0f6a348a-760e-4f67-8a72-fb1397b43f23",
                            AccessFailedCount = 0,
                            Bio = "Marketing Specialist",
                            ConcurrencyStamp = "fcec1381-fb90-4acd-8022-64c7ac59f084",
                            DateJoined = new DateTime(2024, 9, 17, 18, 24, 37, 47, DateTimeKind.Local).AddTicks(1502),
                            Email = "marketer@localhost",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "MARKETER",
                            PasswordHash = "AQAAAAIAAYagAAAAECv8hx7Nsjcj8ZvrOqAkBpzzJH+waQtFUaCiuHSgXmS70Hd4g6cJ60XaXwO5Ei424g==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "",
                            SecurityStamp = "dada83bd-41db-43ed-b4ee-03fc2b7d4fe0",
                            TwoFactorEnabled = false,
                            UserName = "Marketer",
                            Website = "http://market.local"
                        },
                        new
                        {
                            Id = "a87b2e1e-39a4-4fd1-8237-f013f4e9cf6b",
                            AccessFailedCount = 0,
                            Bio = "Customer Support Tech",
                            ConcurrencyStamp = "3365b895-f519-4df7-8de6-76dea5b88b8d",
                            DateJoined = new DateTime(2024, 9, 17, 18, 24, 37, 122, DateTimeKind.Local).AddTicks(3177),
                            Email = "supporttech@localhost",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "SUPPORTTECH",
                            PasswordHash = "AQAAAAIAAYagAAAAEJfRxyZjrjF30tvcatQ58VjPc1TJowNSUJMU4cdUqeH1dxGJBMFBVzQhutXx3ryUNw==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "",
                            SecurityStamp = "59f9648c-d97a-4087-b860-3d9db53ee836",
                            TwoFactorEnabled = false,
                            UserName = "SupportTech",
                            Website = "http://support.local"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("dotnet_social_api.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("dotnet_social_api.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_social_api.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("dotnet_social_api.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_social_api.Models.Comment", b =>
                {
                    b.HasOne("dotnet_social_api.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("dotnet_social_api.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("dotnet_social_api.Models.Follow", b =>
                {
                    b.HasOne("dotnet_social_api.Models.UserProfile", "FolloweeUserProfile")
                        .WithMany()
                        .HasForeignKey("FolloweeUserProfileId");

                    b.HasOne("dotnet_social_api.Models.UserProfile", "FollowerUserProfile")
                        .WithMany()
                        .HasForeignKey("FollowerUserProfileId");

                    b.Navigation("FolloweeUserProfile");

                    b.Navigation("FollowerUserProfile");
                });

            modelBuilder.Entity("dotnet_social_api.Models.Like", b =>
                {
                    b.HasOne("dotnet_social_api.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId");

                    b.HasOne("dotnet_social_api.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("dotnet_social_api.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("dotnet_social_api.Models.Message", b =>
                {
                    b.HasOne("dotnet_social_api.Models.MessageThread", "MessageThread")
                        .WithMany("Messages")
                        .HasForeignKey("MessageThreadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_social_api.Models.UserProfile", "SenderUserProfile")
                        .WithMany()
                        .HasForeignKey("SenderUserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessageThread");

                    b.Navigation("SenderUserProfile");
                });

            modelBuilder.Entity("dotnet_social_api.Models.MessageThread", b =>
                {
                    b.HasOne("dotnet_social_api.Models.UserProfile", "UserProfileOne")
                        .WithMany()
                        .HasForeignKey("UserProfileOneId");

                    b.HasOne("dotnet_social_api.Models.UserProfile", "UserProfileTwo")
                        .WithMany()
                        .HasForeignKey("UserProfileTwoId");

                    b.Navigation("UserProfileOne");

                    b.Navigation("UserProfileTwo");
                });

            modelBuilder.Entity("dotnet_social_api.Models.Notification", b =>
                {
                    b.HasOne("dotnet_social_api.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId");

                    b.HasOne("dotnet_social_api.Models.UserProfile", "FromUserProfile")
                        .WithMany()
                        .HasForeignKey("FromUserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_social_api.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("dotnet_social_api.Models.UserProfile", "ToUserProfile")
                        .WithMany()
                        .HasForeignKey("ToUserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("FromUserProfile");

                    b.Navigation("Post");

                    b.Navigation("ToUserProfile");
                });

            modelBuilder.Entity("dotnet_social_api.Models.Post", b =>
                {
                    b.HasOne("dotnet_social_api.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("dotnet_social_api.Models.MessageThread", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
